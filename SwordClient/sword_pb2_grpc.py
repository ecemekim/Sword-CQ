# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""SwordClient and server classes corresponding to protobuf-defined services."""
import grpc

from sword_pb2 import Message, MessageResponse


class SwordStub(object):

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServerResponse = channel.unary_unary(
            '/sword.Sword/DumpJsons',
            request_serializer=Message.SerializeToString,
            response_deserializer=MessageResponse.FromString,
        )


class SwordServicer(object):

    def DumpJsons(self, request, context):
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SwordServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'DumpJsons': grpc.unary_unary_rpc_method_handler(
            servicer.DumpJsons,
            request_deserializer=Message.FromString,
            response_serializer=MessageResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'sword.Sword', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

